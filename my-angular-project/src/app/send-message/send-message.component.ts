import { Component, OnInit } from '@angular/core';
import { ActivatedRoute } from '@angular/router';
import { Message } from '../message.model';
import { ChatService } from '../chat.service';

@Component({
  selector: 'app-send-message',
  templateUrl: './send-message.component.html',
  styleUrls: ['./send-message.component.css']
})

export class SendMessageComponent implements OnInit {
  ownerId!: string;
  username!: string;
  bookId!: string;
  messages: Message[] = []; 
  newMessage: string = '';

  constructor(private chatService: ChatService, private route: ActivatedRoute) {}

  ngOnInit(): void {
    this.route.params.subscribe(params => {
      this.ownerId = params['ownerId'];
      this.username = params['username'];
      this.bookId = params['bookId'];

    });

    this.loadMessages();
  }

  loadMessages(): void {
    // Fetch messages using ChatService
    // The fetched data should match the Message interface structure
    this.chatService.getMessages().subscribe(
      (data: Message[]) => {
        this.messages = data;
      },
      error => {
        console.error("Failed to load messages", error);
      }
    );
  }

  sendMessage(): void {
    if (this.newMessage.trim()) {
      const messageData: Message = {
        // You would typically not set _id, as it's generated by the database
        sender: this.getUserIdFromLocalStorage(), // This should be dynamically set
        receiver: this.ownerId, // This should be dynamically set
        book_id: this.bookId, // This should be dynamically set
        message: this.newMessage,
        date: new Date(), // Set the current date/time
        seen: false,
      };

      this.chatService.sendMessage(messageData).subscribe(
        () => {
          this.newMessage = '';
          this.loadMessages(); // Reload messages to display the new one
        },
        error => {
          console.error("Failed to send message", error);
        }
      );
    }
  }

  getUserIdFromLocalStorage(): string {
    const currentUserId = localStorage.getItem('userId');
    console.log(currentUserId);
    if (currentUserId != null) {
      return currentUserId;
    } else {
      return '';
    };
  };
}



